USE IMT577_DW_ANUSHISETH_MODULE5

/*
  VIEW 1: ACTUAL SALE VS TARGET SALE
*/
DROP VIEW YEARLY_STORE_SALES_TARGET_COMP;

-- CREATE VIEW YEARLY_STORE_SALES_TARGET_COMP
CREATE OR REPLACE SECURE VIEW YEARLY_STORE_SALES_TARGET_COMP
AS
SELECT c.DIMSTOREID,DIM_STORE.STORENUMBER,c.YEAR,c.SALESAMOUNT,c.SALESTARGETAMOUNT
FROM (
  SELECT a.DIMSTOREID, a.YEAR, b.SALESAMOUNT, a.SALESTARGETAMOUNT
  FROM (
    SELECT DIMSTOREID,  LEFT(CAST(DIMTARGETDATEID AS varchar(8)),4) as YEAR, SALESTARGETAMOUNT
    FROM FACT_SRCSALESTARGET
    WHERE DIMSTOREID <> 1
  ) a
  INNER JOIN (
    SELECT DIMSTOREID, SUM(SALEAMOUNT) as SALESAMOUNT, YEAR
    FROM (
      SELECT DIMSTOREID, DIMSALEDATEID, SALEAMOUNT, LEFT(CAST(DIMSALEDATEID AS varchar(8)),4) as YEAR
      FROM FACT_SALESACTUAL
    ) TBL_ACTUAL_SALES
    GROUP BY YEAR, DIMSTOREID
  ) b
  ON a.DIMSTOREID= b.DIMSTOREID
  AND a.YEAR = b.YEAR
) c 
INNER JOIN DIM_STORE
ON c.DIMSTOREID = DIM_STORE.DIMSTOREID;


------- TEST QUERY FOR STORE 10 AND 21 -----------

SELECT DIMSTOREID,STORENUMBER,YEAR,SALESAMOUNT,SALESTARGETAMOUNT
FROM YEARLY_STORE_SALES_TARGET_COMP 
WHERE STORENUMBER IN (10,21);


/*
  VIEW 2: ACTUAL SALE VS TARGET SALE
*/

DROP VIEW WEEKLY_STORE_SALES;

-- CREATE VIEW WEEKLY_STORE_SALES
CREATE OR REPLACE SECURE VIEW WEEKLY_STORE_SALES 
AS
SELECT a.DIMSTOREID, d.PRODUCTNAME, MIN(STORENUMBER) as STORENUMBER, SUM(SALEAMOUNT) AS TOTAL_SALES, DAY_NAME, MIN(DAY_NUM_IN_WEEK) as DAY_NUM_IN_WEEK
FROM FACT_SALESACTUAL a
INNER JOIN DIM_DATE b
INNER JOIN DIM_STORE c
INNER JOIN DIM_PRODUCT d
ON a.DIMSALEDATEID = b.DATE_PKEY
AND a.DIMSTOREID = c.DIMSTOREID
AND a.DIMPRODUCTID = d.PRODUCTID
WHERE a.DIMSTOREID <> 1
GROUP BY DAY_NAME,a.DIMSTOREID,d.PRODUCTNAME;

------- TEST QUERY FOR STORE 10 AND 21 -----------

SELECT DIMSTOREID,STORENUMBER,TOTAL_SALES,DAY_NAME,DAY_NUM_IN_WEEK 
FROM WEEKLY_STORE_SALES 
WHERE STORENUMBER IN (10,21);



/*
  VIEW 3: STORE BY LOCATION (CITY)
*/

DROP VIEW YEARLY_CITY_STORE_SALES;

-- CREATE VIEW YEARLY_CITY_STORE_SALES
CREATE OR REPLACE SECURE VIEW YEARLY_CITY_STORE_SALES 
AS
SELECT STATEPROVINCE,CITY, COUNT(DISTINCT DIMSTOREID) as STORECOUNT, SUM(SALEAMOUNT) as SALESAMOUNT, YEAR
FROM (
  SELECT DIMSTOREID, SALEAMOUNT, LEFT(CAST(DIMSALEDATEID AS varchar(8)),4) as YEAR, FACT_SALESACTUAL.DIMLOCATIONID, CITY, STATEPROVINCE, COUNTRY
  FROM FACT_SALESACTUAL
  INNER JOIN DIM_LOCATION
  ON FACT_SALESACTUAL.DIMLOCATIONID =DIM_LOCATION.DIMLOCATIONID
  WHERE FACT_SALESACTUAL.DIMSTOREID <> 1
) TBL_ACTUAL_SALES_LOC
GROUP BY STATEPROVINCE, CITY, YEAR;

------- TEST QUERY FOR VIEW 3 -----------

SELECT CITY,STORECOUNT,SALESAMOUNT,YEAR 
FROM YEARLY_CITY_STORE_SALES;



/*
  VIEW 4: STORE BY LOCATION (STATE)
*/

DROP VIEW YEARLY_STATE_STORE_SALES;

-- CREATE VIEW YEARLY_STATE_STORE_SALES
CREATE OR REPLACE SECURE VIEW YEARLY_STATE_STORE_SALES 
AS
SELECT STATEPROVINCE, COUNT(DISTINCT DIMSTOREID) as STORECOUNT, SUM(SALEAMOUNT) as SALESAMOUNT, YEAR
FROM (
  SELECT DIMSTOREID, SALEAMOUNT, LEFT(CAST(DIMSALEDATEID AS varchar(8)),4) as YEAR, FACT_SALESACTUAL.DIMLOCATIONID, CITY, STATEPROVINCE, COUNTRY
  FROM FACT_SALESACTUAL
  INNER JOIN DIM_LOCATION
  ON FACT_SALESACTUAL.DIMLOCATIONID =DIM_LOCATION.DIMLOCATIONID
  WHERE FACT_SALESACTUAL.DIMSTOREID <> 1
) TBL_ACTUAL_SALES_LOC
GROUP BY STATEPROVINCE, YEAR;

------- TEST QUERY FOR VIEW 4 -----------

SELECT STATEPROVINCE,STORECOUNT,SALESAMOUNT,YEAR
FROM YEARLY_STATE_STORE_SALES;


/*
  VIEW 5: SALES BY CHANNEL
*/

DROP VIEW YEARLY_CHANNEL_SALES;

-- CREATE VIEW YEARLY_CHANNEL_SALES
CREATE OR REPLACE SECURE VIEW YEARLY_CHANNEL_SALES 
AS
SELECT CHANNELNAME, MAX(CHANNELCATEGORY) as CHANNELCATEGORY, SUM(SALEAMOUNT) as SALESAMOUNT, YEAR
FROM (
  SELECT DIMSTOREID, SALEAMOUNT, LEFT(CAST(DIMSALEDATEID AS varchar(8)),4) as YEAR, FACT_SALESACTUAL.DIMCHANNELID, CHANNELNAME, CHANNELCATEGORY
  FROM FACT_SALESACTUAL
  INNER JOIN DIM_CHANNEL
  ON FACT_SALESACTUAL.DIMCHANNELID =DIM_CHANNEL.DIMCHANNELID
) TBL_ACTUAL_SALES_CHNL
GROUP BY CHANNELNAME, YEAR;

------- TEST QUERY FOR VIEW 5 -----------

SELECT CHANNELCATEGORY, SUM(SALESAMOUNT), YEAR
FROM YEARLY_CHANNEL_SALES
GROUP BY CHANNELCATEGORY, YEAR;


---- DIM VIEWS -----

CREATE OR REPLACE SECURE VIEW VIEW_DIM_CHANNEL
AS
SELECT DIMCHANNELID,SOURCECHANNELID,SOURCECHANNELCATEGORYID,CHANNELNAME,CHANNELCATEGORY
FROM DIM_CHANNEL;


CREATE OR REPLACE SECURE VIEW VIEW_DIM_CUSTOMERID
AS
SELECT DIMCUSTOMERID,DIMLOCATIONID,CUSTOMERID,FULLNAME,LASTNAME,GENDER,EMAILADDRESS,PHONENUMBER
FROM DIM_CUSTOMER;

CREATE OR REPLACE SECURE VIEW VIEW_DIM_DATE
AS
SELECT DATE_PKEY,
DATE,
FULL_DATE_DESC,
DAY_NUM_IN_WEEK,
DAY_NUM_IN_YEAR,
DAY_NAME,DAY_ABBREV,
WEEKDAY_IND,
US_HOLIDAY_IND,
_HOLIDAY_IND,
MONTH_END_IND,
WEEK_BEGIN_DATE_NKEY,
WEEK_BEGIN_DATE,
WEEK_END_DATE_NKEY,
WEEK_END_DATE,
WEEK_NUM_IN_YEAR,
MONTH_NAME,
MONTH_ABBREV,
MONTH_NUM_IN_YEAR,
YEARMONTH,
QUARTER,
YEARQUARTER,
YEAR,
FISCAL_WEEK_NUM,
FISCAL_MONTH_NUM,
FISCAL_YEARMONTH,
FISCAL_QUARTER,
FISCAL_YEARQUARTER,
FISCAL_HALFYEAR,
FISCAL_YEAR,
SQL_TIMESTAMP,
CURRENT_ROW_IND,
EFFECTIVE_DATE,
EXPIRATION_DATE
FROM DIM_DATE;

CREATE OR REPLACE SECURE VIEW VIEW_DIM_LOCATION
AS 
SELECT DIMLOCATIONID,
ADDRESS,
CITY,
POSTALCODE,
STATEPROVINCE,
COUNTRY
FROM DIM_LOCATION;

CREATE OR REPLACE SECURE VIEW VIEW_DIM_PRODUCT
AS
SELECT PRODUCTID,
SOURCEPRODUCTID,
SOURCEPRODUCTTYPEID,
SOURCEPRODUCTCATEGORYID,
PRODUCTNAME,
PRODUCTTYPE,
PRODUCTCATEGORY,
PRODUCTRETAILPRICE,
PRODUCTWHOLESALEPRICE,
PRODUCTCOST,
PRODUCTRETAILPROFIT,
PRODUCTWHOLESALEUNITPROFIT,
PRODUTPROFITMARGIUNITPERCENT
FROM DIM_PRODUCT;

CREATE OR REPLACE SECURE VIEW VIEW_DIM_RESELLER
AS
SELECT DIMRESELLERID,
DIMLOCATIONID,
SOURCERESELLERID,
RESELLERNAME,
CONTACTNAME,
PHONENUMBER,
EMAIL
FROM DIM_RESELLER;

CREATE OR REPLACE SECURE VIEW VIEW_DIM_STORE
AS
SELECT DIMSTOREID,
DIMLOCATIONID,
STOREID,
STORENUMBER,
STOREMANAGER
FROM DIM_STORE;


CREATE OR REPLACE SECURE VIEW VIEW_FACT_PRODUCTSALESTARGET
AS
SELECT DIMPRODUCTID,
DIMTARGETDATEID,
PRODUCTTARGETSALESQUANTITY
FROM FACT_PRODUCTSALESTARGET;

CREATE OR REPLACE SECURE VIEW VIEW_FACT_SRCSALESTARGET
AS
SELECT DIMSTOREID, DIMRESELLERID,
DIMCHANNELID,
DIMTARGETDATEID,
SALESTARGETAMOUNT
FROM FACT_SRCSALESTARGET;



CREATE OR REPLACE SECURE VIEW VIEW_FACT_SALESACTUAL
AS
SELECT DIMPRODUCTID,
DIMSTOREID,
DIMRESELLERID,
DIMCUSTOMERID,
DIMCHANNELID,
DIMSALEDATEID,
DIMLOCATIONID,
SOURCESALESHEADERID,
SOURCESALESDETAILID,
SALEAMOUNT,
SALEQUANTITY,
SALEUNITPRICE,
SALEEXTENDEDCOST,
SALETOTALPROFIT
FROM FACT_SALESACTUAL;
